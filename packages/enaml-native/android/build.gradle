apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'me.tatarka:gradle-retrolambda:3.7.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenLocal()
        jcenter()
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 12
        versionName "1.12"
        vectorDrawables.useSupportLibrary = true
    }
    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir 'src/main/libs'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    compile fileTree(include: ['*.jar', '*.so'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'

    // Requirements
    compile 'org.msgpack:msgpack-core:0.8.13'
    //compile 'org.lz4:lz4-java:1.4.0'
    compile 'org.kamranzafar:jtar:2.3'


    //compile 'com.github.bumptech.glide:glide:4.0.0-RC1'
    //annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0-RC1'

    // HTTP
    compile 'com.loopj.android:android-async-http:1.4.9'

    // Flexbox
    //compile 'com.facebook.yoga:yoga:1.5.0'
    compile 'com.google.android:flexbox:0.3.0'

}

afterEvaluate {
    task bundlePython(type: Exec) {
        workingDir '../../../' // root enaml-native dir
        def venvExists = file('./venv/bin/enaml-native').exists()
        def enamlNative = venvExists ?'./venv/bin/enaml-native':'./enaml-native'
        if (project.hasProperty("preReleaseBuild")) {
            commandLine enamlNative, "bundle-assets", "--release"
        } else {
            commandLine enamlNative, "bundle-assets"
        }

    }
    preBuild.dependsOn bundlePython
}

